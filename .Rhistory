this_pcpn$flux      <- "pcpn"
this_pcpn$site_id   <- "pcpn"
for (lake in lakes) {
# Lake
all_CSLS <- NULL
for (p in 1:length(param_names$CSLS_param)) {
this_CSLS <- filter_parameter(lake,
parameter = param_names$CSLS_param[p],
plotting_name = param_names$CSLS_names[p])
this_CSLS$site_type <- recode(this_CSLS$site_type,
"Upgradient" = "GWin",
"Downgradient" = "GWout",
"Lake Surface" = "lake")
this_CSLS <- this_CSLS %>%
select(.data$date, .data$station_id, .data$site_type, .data$result)
colnames(this_CSLS) <- c("date", "site_id", "flux", "result")
this_CSLS$parameter <- param_names$NADP_param[p]
all_CSLS <- rbind(all_CSLS, this_CSLS)
}
all_CSLS <- all_CSLS %>%
select(.data$date, .data$parameter, .data$result, .data$flux,
.data$site_id)
# All Together
chem_samples      <- rbind(this_pcpn, all_CSLS)
chem_samples$date <- floor_date(chem_samples$date, unit = "week")
chem_samples$lake <- lake
}
all_chem <- NULL
for (lake in lakes) {
# Lake
all_CSLS <- NULL
for (p in 1:length(param_names$CSLS_param)) {
this_CSLS <- filter_parameter(lake,
parameter = param_names$CSLS_param[p],
plotting_name = param_names$CSLS_names[p])
this_CSLS$site_type <- recode(this_CSLS$site_type,
"Upgradient" = "GWin",
"Downgradient" = "GWout",
"Lake Surface" = "lake")
this_CSLS <- this_CSLS %>%
select(.data$date, .data$station_id, .data$site_type, .data$result)
colnames(this_CSLS) <- c("date", "site_id", "flux", "result")
this_CSLS$parameter <- param_names$NADP_param[p]
all_CSLS <- rbind(all_CSLS, this_CSLS)
}
all_CSLS <- all_CSLS %>%
select(.data$date, .data$parameter, .data$result, .data$flux,
.data$site_id)
# All Together
chem_samples      <- rbind(this_pcpn, all_CSLS)
chem_samples$date <- floor_date(chem_samples$date, unit = "week")
chem_samples$lake <- lake
all_chem <- rbind(all_chem, chem_samples)
}
# Rearrange
chem_samples <- dcast(all_chem,
date+flux+site_id+lake~parameter,
value.var = "result",
fun.aggregate = mean)
View(chem_samples)
# Rearrange
chem_samples <- dcast(all_chem,
date+lake+flux+site_id~parameter,
value.var = "result",
fun.aggregate = mean)
head(chem_samples[, "Ca"])
test <- "Ca"
head(chem_samples[, test])
i = 1
j = 2
xparam  <- param_names$NADP_param[i]
yparam  <- param_names$NADP_param[j]
head(chem_samples[,c(xparam, yparam)])
head(chem_samples[,c(xparam, yparam, "flux", "lake")])
colnames(compare) <- c("x", "y", "flux", "lake")
xparam  <- param_names$NADP_param[i]
yparam  <- param_names$NADP_param[j]
compare <- chem_samples[,c(xparam, yparam, "flux", "lake")]
colnames(compare) <- c("x", "y", "flux", "lake")
ggplot(compare, aes(x = x, y = y)) +
facet_grid(~lake, scales = "free") +
geom_point(aes(color = flux),
size = 2) +
stat_smooth(method = "lm", se = FALSE, color = "grey40") +
labs(x = xparam, y = yparam, color = "") +
theme_bw() +
theme(text = element_text(family = "Segoe UI Semilight",
size = text_size),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
library(ggplot2)
ggplot(compare, aes(x = x, y = y)) +
facet_grid(~lake, scales = "free") +
geom_point(aes(color = flux),
size = 2) +
stat_smooth(method = "lm", se = FALSE, color = "grey40") +
labs(x = xparam, y = yparam, color = "") +
theme_bw() +
theme(text = element_text(family = "Segoe UI Semilight",
size = text_size),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
text_size = 12
ggplot(compare, aes(x = x, y = y)) +
facet_grid(~lake, scales = "free") +
geom_point(aes(color = flux),
size = 2) +
stat_smooth(method = "lm", se = FALSE, color = "grey40") +
labs(x = xparam, y = yparam, color = "") +
theme_bw() +
theme(text = element_text(family = "Segoe UI Semilight",
size = text_size),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
library(extrafont)
ggplot(compare, aes(x = x, y = y)) +
facet_grid(~lake, scales = "free") +
geom_point(aes(color = flux),
size = 2) +
stat_smooth(method = "lm", se = FALSE, color = "grey40") +
labs(x = xparam, y = yparam, color = "") +
theme_bw() +
theme(text = element_text(family = "Segoe UI Semilight",
size = text_size),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
ggplot(compare, aes(x = x, y = y)) +
facet_grid(~lake, scales = "free") +
geom_point(aes(color = flux),
size = 2) +
stat_smooth(method = "lm", se = FALSE, color = "grey40") +
labs(x = xparam, y = yparam, color = "") +
scale_color_manual(breaks = c("pcpn", "GWin", "GWout", "lake" ),
labels = c("Precipitation",
"Groundwater Inflow",
"Groundwater Outflow",
"Lake"),
values = c("#B2DF8A", "#33A02C",
"#FB9A99", "#A6CEE3")) +
theme_bw() +
theme(text = element_text(family = "Segoe UI Semilight",
size = text_size),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
compare <- filter(compare, flux != "Lake Bottom")
ggplot(compare, aes(x = x, y = y)) +
facet_grid(~lake, scales = "free") +
geom_point(aes(color = flux),
size = 2) +
stat_smooth(method = "lm", se = FALSE, color = "grey40") +
labs(x = xparam, y = yparam, color = "") +
scale_color_manual(breaks = c("pcpn", "GWin", "GWout", "lake" ),
labels = c("Precipitation",
"Groundwater Inflow",
"Groundwater Outflow",
"Lake"),
values = c("#B2DF8A", "#33A02C",
"#FB9A99", "#A6CEE3")) +
theme_bw() +
theme(text = element_text(family = "Segoe UI Semilight",
size = text_size),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
ggplot(compare, aes(x = x, y = y)) +
facet_grid(~lake, scales = "free") +
geom_point(aes(color = flux),
size = 2) +
stat_smooth(method = "lm", se = FALSE, color = "grey40") +
labs(x = xparam, y = yparam, color = "") +
scale_color_manual(breaks = c("pcpn", "GWin", "GWout", "lake" ),
labels = c("Precipitation",
"Groundwater Inflow",
"Groundwater Outflow",
"Lake"),
values = c("#B2DF8A", "#33A02C",
"#FB9A99", "#1F78B4")) +
theme_bw() +
theme(text = element_text(family = "Segoe UI Semilight",
size = text_size),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
ggplot(compare, aes(x = x, y = y)) +
facet_wrap(~lake, scales = "free") +
geom_point(aes(color = flux),
size = 2) +
stat_smooth(method = "lm", se = FALSE, color = "grey40") +
labs(x = xparam, y = yparam, color = "") +
scale_color_manual(breaks = c("pcpn", "GWin", "GWout", "lake" ),
labels = c("Precipitation",
"Groundwater Inflow",
"Groundwater Outflow",
"Lake"),
values = c("#B2DF8A", "#33A02C",
"#FB9A99", "#1F78B4")) +
theme_bw() +
theme(text = element_text(family = "Segoe UI Semilight",
size = text_size),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
ggplot(compare, aes(x = x, y = y)) +
facet_wrap(~lake, scales = "free") +
geom_point(aes(color = flux),
size = 2) +
stat_smooth(method = "lm", se = FALSE, color = "grey40") +
labs(x = xparam, y = yparam, color = "") +
scale_color_manual(breaks = c("pcpn", "GWin", "GWout", "lake" ),
labels = c("Precipitation",
"Groundwater Inflow",
"Groundwater Outflow",
"Lake"),
values = c("#B2DF8A", "#33A02C",
"#FB9A99", "#1F78B4")) +
theme_bw() +
theme(text = element_text(family = "Segoe UI Semilight",
size = text_size),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
k <- 1
for (i in 1:nrow(param_names)) {
for (j in 1:nrow(param_names)) {
xparam  <- param_names$NADP_param[i]
yparam  <- param_names$NADP_param[j]
compare <- chem_samples[,c(xparam, yparam, "flux", "lake")]
colnames(compare) <- c("x", "y", "flux", "lake")
compare <- filter(compare, flux != "Lake Bottom")
plot_obj[k] <- ggplot(compare, aes(x = x, y = y)) +
facet_wrap(~lake, scales = "free") +
geom_point(aes(color = flux),
size = 2) +
stat_smooth(method = "lm", se = FALSE, color = "grey40") +
labs(x = xparam, y = yparam, color = "") +
scale_color_manual(breaks = c("pcpn", "GWin",
"GWout", "lake" ),
labels = c("Precipitation",
"Groundwater Inflow",
"Groundwater Outflow",
"Lake"),
values = c("#B2DF8A", "#33A02C",
"#FB9A99", "#1F78B4")) +
theme_bw() +
theme(text = element_text(family = "Segoe UI Semilight",
size = text_size),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
k <- k + 1
}
}
plot_obj <- NULL
for (i in 1:nrow(param_names)) {
for (j in 1:nrow(param_names)) {
xparam  <- param_names$NADP_param[i]
yparam  <- param_names$NADP_param[j]
compare <- chem_samples[,c(xparam, yparam, "flux", "lake")]
colnames(compare) <- c("x", "y", "flux", "lake")
compare <- filter(compare, flux != "Lake Bottom")
plot_obj[k] <- ggplot(compare, aes(x = x, y = y)) +
facet_wrap(~lake, scales = "free") +
geom_point(aes(color = flux),
size = 2) +
stat_smooth(method = "lm", se = FALSE, color = "grey40") +
labs(x = xparam, y = yparam, color = "") +
scale_color_manual(breaks = c("pcpn", "GWin",
"GWout", "lake" ),
labels = c("Precipitation",
"Groundwater Inflow",
"Groundwater Outflow",
"Lake"),
values = c("#B2DF8A", "#33A02C",
"#FB9A99", "#1F78B4")) +
theme_bw() +
theme(text = element_text(family = "Segoe UI Semilight",
size = text_size),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
k <- k + 1
}
}
ggarrange(plot_obj, ncol = nrow(param_names), common.legend = TRUE)
install.packages("ggpubr")
library(ggpubr)
ggarrange(plot_obj, ncol = nrow(param_names), common.legend = TRUE)
ggarrange(plot_obj, ncol = nrow(param_names), common.legend = TRUE)
plot_obj[1]
plot_obj[[1]]
print(plot_obj[1])
plot_grid(plot_obj, ncol = nrow(param_names), common.legend = TRUE)
library(cowplot)
install.packages("cowplot")
library(cowplot)
plot_grid(plot_obj, ncol = nrow(param_names), common.legend = TRUE)
plot_grid(plot_list = plot_obj, ncol = nrow(param_names), common.legend = TRUE)
k        <- 1
plot_obj <- NULL
for (i in 1:nrow(param_names)) {
for (j in 1:nrow(param_names)) {
xparam  <- param_names$NADP_param[i]
yparam  <- param_names$NADP_param[j]
compare <- chem_samples[,c(xparam, yparam, "flux", "lake")]
colnames(compare) <- c("x", "y", "flux", "lake")
compare <- filter(compare, flux != "Lake Bottom")
plot_obj[k] <- print(ggplot(compare, aes(x = x, y = y)) +
facet_wrap(~lake, scales = "free") +
geom_point(aes(color = flux),
size = 2) +
stat_smooth(method = "lm", se = FALSE, color = "grey40") +
labs(x = xparam, y = yparam, color = "") +
scale_color_manual(breaks = c("pcpn", "GWin",
"GWout", "lake" ),
labels = c("Precipitation",
"Groundwater Inflow",
"Groundwater Outflow",
"Lake"),
values = c("#B2DF8A", "#33A02C",
"#FB9A99", "#1F78B4")) +
theme_bw() +
theme(text = element_text(family = "Segoe UI Semilight",
size = text_size),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()))
k <- k + 1
}
}
plot_grid(plot_list = plot_obj, ncol = nrow(param_names), common.legend = TRUE)
plot_obj[1]
xparam  <- param_names$NADP_param[i]
yparam  <- param_names$NADP_param[j]
compare <- chem_samples[,c(xparam, yparam, "flux", "lake")]
colnames(compare) <- c("x", "y", "flux", "lake")
compare <- filter(compare, flux != "Lake Bottom")
plot_obj[k] <- print(ggplot(compare, aes(x = x, y = y)) +
facet_wrap(~lake, scales = "free") +
geom_point(aes(color = flux),
size = 2) +
stat_smooth(method = "lm", se = FALSE, color = "grey40") +
labs(x = xparam, y = yparam, color = "") +
scale_color_manual(breaks = c("pcpn", "GWin",
"GWout", "lake" ),
labels = c("Precipitation",
"Groundwater Inflow",
"Groundwater Outflow",
"Lake"),
values = c("#B2DF8A", "#33A02C",
"#FB9A99", "#1F78B4")) +
theme_bw() +
theme(text = element_text(family = "Segoe UI Semilight",
size = text_size),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()))
library(ggplot)
library(ggplot2)
library(dplyr)
#Parameter names
param_names <- H2Ochem::param_names
param_names <- param_names %>%
filter(.data$NADP_param != "",
.data$CSLS_param != "",
.data$NADP_param != "ph")
k        <- 1
plot_obj <- NULL
for (i in 1:nrow(param_names)) {
for (j in 1:nrow(param_names)) {
xparam  <- param_names$NADP_param[i]
yparam  <- param_names$NADP_param[j]
compare <- chem_samples[,c(xparam, yparam, "flux", "lake")]
colnames(compare) <- c("x", "y", "flux", "lake")
compare <- filter(compare, flux != "Lake Bottom")
plot_obj[k] <- print(ggplot(compare, aes(x = x, y = y)) +
facet_wrap(~lake, scales = "free") +
geom_point(aes(color = flux),
size = 2) +
stat_smooth(method = "lm", se = FALSE, color = "grey40") +
labs(x = xparam, y = yparam, color = "") +
scale_color_manual(breaks = c("pcpn", "GWin",
"GWout", "lake" ),
labels = c("Precipitation",
"Groundwater Inflow",
"Groundwater Outflow",
"Lake"),
values = c("#B2DF8A", "#33A02C",
"#FB9A99", "#1F78B4")) +
theme_bw() +
theme(text = element_text(family = "Segoe UI Semilight",
size = text_size),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()))
k <- k + 1
}
}
plot_grid(plot_list = plot_obj, ncol = nrow(param_names), common.legend = TRUE)
library(ggplot2)
library(dplyr)
library(isoH2Obudget)
library(H2Ochem)
chem_bal <- get_chem_bal("Long")
chem_bal$in_or_out <- ""
for (i in 1:nrow(chem_bal)) {
if (chem_bal$flux[i] == "pcpn" |
chem_bal$flux[i] == "GWin") {
chem_bal$in_or_out[i] <- "In"
} else {
chem_bal$in_or_out[i] <- "Out"
}
}
as_pcnt = TRUE
text_size = 28
if (as_pcnt) {
chem_bal <- chem_bal %>%
group_by(.data$parameter) %>%
mutate(mass = 100*.data$mass/
sum(.data$mass[.data$in_or_out == "In"]))
}
chem_bal <- chem_bal %>% filter(.data$in_or_out == "In")
ggplot(data = chem_bal) +
geom_col(aes(x = .data$parameter, y = .data$mass,
fill = .data$flux)) +
scale_fill_manual(name = "Sites",
breaks = c("GWin", "pcpn"),
labels = c("Groundwater", "Precipitation"),
values = c("#33A02C", "#1F78B4")) +
scale_y_continuous(expand = c(0,0)) +
labs(x = "", y = "Incoming Solute (%)", fill = "",
title = sprintf("%s Lake", lake)) +
theme_bw() +
theme(text = element_text(family = "Segoe UI Semilight",
size = text_size),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = "top")
lake <- "Long"
ggplot(data = chem_bal) +
geom_col(aes(x = .data$parameter, y = .data$mass,
fill = .data$flux)) +
scale_fill_manual(name = "Sites",
breaks = c("GWin", "pcpn"),
labels = c("Groundwater", "Precipitation"),
values = c("#33A02C", "#1F78B4")) +
scale_y_continuous(expand = c(0,0)) +
labs(x = "", y = "Incoming Solute (%)", fill = "",
title = sprintf("%s Lake", lake)) +
theme_bw() +
theme(text = element_text(family = "Segoe UI Semilight",
size = text_size),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = "top")
ggplot(data = chem_bal) +
geom_col(aes(x = .data$parameter, y = .data$mass,
fill = .data$flux)) +
scale_fill_manual(name = "",
breaks = c("GWin", "pcpn"),
labels = c("Groundwater", "Precipitation"),
values = c("#33A02C", "#1F78B4")) +
scale_y_continuous(expand = c(0,0)) +
labs(x = "", y = "Incoming Solute (%)", fill = "",
title = sprintf("%s Lake", lake)) +
theme_bw() +
theme(text = element_text(family = "Segoe UI Semilight",
size = text_size),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = "top")
ggplot(data = chem_bal) +
geom_col(aes(x = .data$parameter, y = .data$mass,
fill = .data$flux)) +
scale_fill_manual(name = "",
breaks = c("GWin", "pcpn"),
labels = c("Groundwater", "Precipitation"),
values = c("#33A02C", "#1F78B4")) +
scale_y_continuous(expand = c(0,0)) +
labs(x = "", y = "Incoming Solute (%)", fill = "",
title = "") +
theme_bw() +
theme(text = element_text(family = "Segoe UI Semilight",
size = text_size),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = "top")
library(extrafont)
ggplot(data = chem_bal) +
geom_col(aes(x = .data$parameter, y = .data$mass,
fill = .data$flux)) +
scale_fill_manual(name = "",
breaks = c("GWin", "pcpn"),
labels = c("Groundwater", "Precipitation"),
values = c("#33A02C", "#1F78B4")) +
scale_y_continuous(expand = c(0,0)) +
labs(x = "", y = "Incoming Solute (%)", fill = "",
title = "") +
theme_bw() +
theme(text = element_text(family = "Segoe UI Semilight",
size = text_size),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = "top")
ggplot(data = chem_bal) +
geom_col(aes(x = .data$parameter, y = .data$mass,
fill = .data$flux)) +
scale_fill_manual(name = "",
breaks = c("GWin", "pcpn"),
labels = c("Groundwater", "Precipitation"),
values = c("#33A02C", "#1F78B4")) +
scale_y_continuous(expand = c(0,0)) +
labs(x = "", y = "Incoming Solute (%)", fill = "",
title = "") +
theme_bw() +
theme(text = element_text(family = "Segoe UI Semilight",
size = text_size),
axis.text.x = element_text(family = "Segoe UI Semibold"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = "top")
View(chem_bal)
